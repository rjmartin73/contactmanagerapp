{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/about.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","d","Date","$day","$d","getDate","padDate","$time","toLocaleTimeString","getMonth","getFullYear","Header","branding","href","defaultProps","about","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","suite","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","test","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.add884e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { stat } from 'fs';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    //.then(res => this.setState({ contacts: res.data }));\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  /// Has access to 'this' if this function is an arrow function,\r\n  /// otherwise you have to bind this to the event onClick={this.onShowClick.bind(this)}\r\n  /// or use a constructor to bind it\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  // delete handler\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      //.then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\r\n      //console.error('It works!');\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    //const { suite, street, city, zipcode } = this.props.contact.address;\r\n    //const { catchPhrase, bs } = this.props.contact.company;\r\n    //const cname = this.props.contact.company.name;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body shadow-lg p-3 mb-3 bg-white border border-primary rounded'>\r\n              <h5 className='card-title'>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className='fas fa-times'\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />{' '}\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-user-edit'\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h5>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item rounded'>Email: {email}</li>\r\n                  <li className='list-group-item rounded'>Phone: {phone}</li>\r\n                  {/* <li className=\"list-group-item rounded\">\r\n                    Address: {suite} {street} <br />\r\n                    {city} {zipcode}\r\n                  </li>\r\n                  <li className=\"list-group-item rounded\">\r\n                    Company: <span className=\"lead\">{cname}</span>\r\n                    <br />\r\n                    <em>{catchPhrase}</em>\r\n                    <br />\r\n                    <em className=\"text-secondary\">{bs}</em>\r\n                    <br />\r\n                    <a href={\"http://\" + website} target=\"_new\">\r\n                      {\"http://\" + website}\r\n                    </a>\r\n                  </li> */}\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n  //   email: PropTypes.string.isRequired,\r\n  //   phone: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  // email={contact.email}\r\n                  // phone={contact.phone}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\n/// Date stuff\r\nconst d = new Date();\r\nconst $months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\nconst $day = padDate(d); //d.getDate() < 10 ? '0' + d.getDate() : d.getDate(); // add leading zero\r\nconst $time = d.toLocaleTimeString();\r\nconst _month = $months[d.getMonth()];\r\nconst _day = $day;\r\nconst $d = _month + ' ' + _day + ', ' + d.getFullYear() + ' - ' + $time;\r\n/// End of date stuff\r\n\r\nconst Header = props => {\r\n  //d = d.toDateString;\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      {/* <h1 style={headingStyle}>{branding}</h1> */}\r\n      <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-3 mt-3 py-0'>\r\n        <div className='container'>\r\n          <div>\r\n            <ul className='navbar-nav'>\r\n              <li className='nav-item text-white-50'>{$d}</li>\r\n            </ul>\r\n          </div>\r\n          <a href='/' className='navbar-brand ml-auto'>\r\n            {branding}\r\n          </a>\r\n          <div>\r\n            <ul className='navbar-nav mr-auto'>\r\n              <li className='nav-item'>\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home</Link>\r\n               </li>\r\n              <li className='nav-item'>\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add</Link>\r\n               </li>\r\n              <li className='nav-item'>\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About</Link>\r\n               </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'Contact Manger'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: '#bada55',\r\n//   fontSize: '50px'\r\n// };\r\n\r\n/// Helper functions\r\nfunction padDate($d) {\r\n  return $d.getDate() < 10 ? '0' + $d.getDate() : $d.getDate();\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>\r\n        About Contact Manager\r\n        {/* {props.match.params.id} */}\r\n      </h1>\r\n      <p className='lead'>Simple app to manage contacts</p>\r\n      <p className='text-secondary'>Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-sm', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        error='true'\r\n      />\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    suite: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, suite } = this.state; //destructuring\r\n\r\n    //  Check for errors\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    // new contact object removed the id, since it is returned from the api call\r\n    const newContact = { name, email, phone, suite };\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    //   .then(res =>\r\n    //     dispatch({\r\n    //       type: 'ADD_CONTACT',\r\n    //       payload: res.data\r\n    //     })\r\n    // );\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data\r\n    });\r\n\r\n    //clear the state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      suite: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3 bg-white'>\r\n              <div className='card-header bg-primary text-white'>\r\n                Add Contact\r\n              </div>\r\n              <div>\r\n                <div className='card-body border border-primary'>\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label='Names'\r\n                      name='name'\r\n                      placeholder='Enter Name...'\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label='Emails'\r\n                      name='email'\r\n                      placeholder='Enter Email...'\r\n                      type='email'\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label='Phone'\r\n                      name='phone'\r\n                      placeholder='Enter Phone Number...'\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <button\r\n                      type='submit'\r\n                      className='btn btn-sm btn-outline-primary my-2 my-sm-0 btn-primary '\r\n                    >\r\n                      Add Contact\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    suite: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, suite } = this.state; //destructuring\r\n\r\n    //  Check for errors\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    //clear the state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      suite: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3 bg-white'>\r\n              <div className='card-header bg-primary text-white'>\r\n                Edit Contact\r\n              </div>\r\n              <div>\r\n                <div className='card-body border border-primary'>\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label='Name'\r\n                      name='name'\r\n                      placeholder='Enter Name...'\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label='Email'\r\n                      name='email'\r\n                      placeholder='Enter Email...'\r\n                      type='email'\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label='Phone'\r\n                      name='phone'\r\n                      placeholder='Enter Phone Number...'\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <button\r\n                      type='submit'\r\n                      className='btn btn-sm btn-outline-primary my-2 my-sm-0 btn-primary '\r\n                    >\r\n                      Update Contact\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    //console.log('componentDidMount...');\r\n    fetch('https://jsonplaceholder.typicode.com/posts/4')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n  // componentWillMount() {\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n/// Bring in custom components\r\nimport Contacts from './components/contacts/Contacts';\r\nimport Header from './components/layout/Header';\r\nimport about from './components/pages/about';\r\nimport NotFound from './components/pages/NotFound';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\n\r\nimport test from './components/test/Test';\r\nimport { Provider } from './context';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className='App'>\r\n            <Header branding='My Contact Manager' />\r\n            <div className='container'>\r\n              <Switch>\r\n                <Route exact path='/' component={Contacts} />\r\n                <Route exact path='/contact/add' component={AddContact} />\r\n                <Route exact path='/contact/edit/:id' component={EditContact} />\r\n                <Route exact path='/about/' component={about} />\r\n                <Route exact path='/test' component={test} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}